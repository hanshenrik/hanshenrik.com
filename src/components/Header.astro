---
import { Icon } from "astro-icon/components";
import {
  CLOSE_ICON,
  GIGS_ICON,
  HAMBURGER_MENU_ICON,
  RECORDINGS_ICON,
  SOFTWARE_ICON,
  VIDEO_ICON,
} from "../icons";
import IconButton from "./IconButton.astro";
import Link from "./Link.astro";
import PianoPlukk from "./PianoPlukk.astro";

const menuItems = [
  { href: "/gigs", label: "Gigs", icon: GIGS_ICON },
  { href: "/recordings", label: "Recordings", icon: RECORDINGS_ICON },
  { href: "/video", label: "Video", icon: VIDEO_ICON },
  { href: "/software", label: "Software", icon: SOFTWARE_ICON },
];
---

<div class="h-16"></div>
<header
  class="header fixed top-0 right-0 left-0 z-50 bg-white/80 backdrop-blur-sm transition-all duration-300"
>
  <nav
    class="container mx-auto px-4 transition-all duration-300"
    id="header-nav"
  >
    <div class="flex items-center justify-between">
      <div class="flex items-center gap-1">
        <PianoPlukk />
        <Link
          href="/"
          class="wave-link hide-initial-underline text-base font-medium text-gray-900 transition-all duration-200 md:text-xl"
          >hanshenrik.com</Link
        >
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden items-center space-x-6 md:flex">
        {
          menuItems.map(({ href, label, icon }) => (
            <Link
              href={href}
              class="group flex items-center gap-2 font-medium"
              noWave
            >
              <Icon
                name={icon}
                size={24}
                class="transition-transform group-hover:scale-110"
              />
              {label}
            </Link>
          ))
        }
      </div>

      <!-- Mobile Menu Button -->
      <IconButton
        id="menu-button"
        icon={HAMBURGER_MENU_ICON}
        label="Toggle menu"
        class="md:hidden"
      />
    </div>
  </nav>
</header>

<!-- Mobile Navigation Drawer -->
<div
  id="mobile-menu"
  class="fixed inset-y-0 right-0 z-50 w-64 translate-x-full transform bg-white shadow-lg transition-transform duration-300 ease-in-out"
>
  <div class="flex h-full flex-col">
    <div class="flex justify-end p-4">
      <IconButton id="close-button" icon={CLOSE_ICON} label="Close menu" />
    </div>
    <nav class="flex-1 space-y-6 px-4 py-6">
      {
        menuItems.map(({ href, label, icon }) => (
          <Link
            href={href}
            class="wave-link group flex w-fit items-center gap-2 text-xl"
          >
            <Icon name={icon} size={24} />
            {label}
          </Link>
        ))
      }
    </nav>
  </div>
</div>

<!-- Backdrop -->
<div
  id="backdrop"
  class="bg-opacity-50 pointer-events-none fixed inset-0 z-40 bg-black/30 opacity-0 transition-opacity duration-300 ease-in-out"
>
</div>

<script>
  const menuButton = document.getElementById("menu-button");
  const closeButton = document.getElementById("close-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const backdrop = document.getElementById("backdrop");
  const header = document.querySelector("header");

  let lastScrollY = window.scrollY;

  function updateHeader() {
    const currentScrollY = window.scrollY;

    if (currentScrollY > 50) {
      header?.classList.add("stuck");
    } else {
      header?.classList.remove("stuck");
    }

    lastScrollY = currentScrollY;
  }

  // Initial check
  updateHeader();

  // Add scroll event listener
  window.addEventListener("scroll", updateHeader, { passive: true });

  function openMenu() {
    mobileMenu?.classList.remove("translate-x-full");
    backdrop?.classList.remove("opacity-0", "pointer-events-none");
    document.body.style.overflow = "hidden";
  }

  function closeMenu() {
    mobileMenu?.classList.add("translate-x-full");
    backdrop?.classList.add("opacity-0", "pointer-events-none");
    document.body.style.overflow = "";
  }

  menuButton?.addEventListener("click", openMenu);
  closeButton?.addEventListener("click", closeMenu);
  backdrop?.addEventListener("click", closeMenu);

  // Close menu on escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      closeMenu();
    }
  });
</script>
