---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("drypp");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

const post = Astro.props as CollectionEntry<"drypp">;
const { Content } = await render(post);
const { title, description, pubDate, updatedDate } = post.data;
---

<Layout title={title}>
  <article class="mx-auto max-w-3xl" transition:name={`post-${post.id}`}>
    <header class="mb-8">
      <h1 class="mb-4" transition:name={`post-title-${post.id}`}>{title}</h1>
      <p class="mb-4 text-gray-600">{description}</p>
      <div class="text-sm text-gray-500">
        <time datetime={pubDate.toISOString()}>
          Published {
            pubDate.toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
        {
          updatedDate && (
            <time datetime={updatedDate.toISOString()} class="ml-4">
              Updated{" "}
              {updatedDate.toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })}
            </time>
          )
        }
      </div>
    </header>
    <div class="prose prose-lg" transition:name={`post-content-${post.id}`}>
      <Content />
    </div>
  </article>
</Layout>

<style>
  ::view-transition-old(post-${post.id}),
  ::view-transition-new(post-${post.id}) {
    animation: none;
    mix-blend-mode: normal;
  }

  ::view-transition-old(post-${post.id}) {
    z-index: 1;
  }
  ::view-transition-new(post-${post.id}) {
    z-index: 2;
  }

  .dark::view-transition-old(post-${post.id}) {
    z-index: 2;
  }
  .dark::view-transition-new(post-${post.id}) {
    z-index: 1;
  }

  ::view-transition-old(post-${post.id}),
  ::view-transition-new(post-${post.id}) {
    animation: slide 0.3s ease-in-out;
  }

  @keyframes slide {
    from {
      transform: translateX(100%);
    }
    to {
      transform: translateX(0);
    }
  }
</style>
